import streamlit as st
from streamlit_folium import st_folium
from datetime import datetime
import io
from mapa_alagoas import gerar_mapa
from dados_comex import consulta_comex  

# Configura√ß√µes da p√°gina
st.set_page_config(
    layout="wide",
    page_title="Mapa de Com√©rcio Exterior de Alagoas"
)

# Sidebar para configura√ß√µes e links
with st.sidebar:
    st.header("Configura√ß√µes")
   
    # Sele√ß√£o de intervalo de anos na sidebar
    ano_inicio, ano_fim = st.select_slider(
        "Selecione o intervalo de anos:",
        options=list(range(1997, 2025)),
        value=(2023, 2024),
        key="intervalo_anos"
    )
   
    st.divider()
   
    # Se√ß√£o de contato
    st.header("üë®‚Äçüíª Desenvolvedor")
    st.markdown("**Arthur Brasil**")
   
    # Links com √≠cones
    st.markdown(
        """
        [![LinkedIn](https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&logo=linkedin&logoColor=white)](https://www.linkedin.com/in/arthur-brasill/)
       
        [![GitHub](https://img.shields.io/badge/GitHub-100000?style=for-the-badge&logo=github&logoColor=white)](https://github.com/Brasiliinho)
        """,
        unsafe_allow_html=True
    )
   
    # Informa√ß√µes adicionais
    st.markdown("---")
    st.markdown("### Sobre o Projeto")
    st.markdown(
        """
        Visualiza√ß√£o interativa dos dados de com√©rcio exterior
        de Alagoas baseada nos dados do ComexStat.
        """
    )

# T√≠tulo principal
st.markdown("# Visualiza√ß√£o da Exporta√ß√£o √ó Importa√ß√£o de Alagoas")

# Subt√≠tulo com justificativa
st.markdown(
    """
    ### An√°lise geogr√°fica das movimenta√ß√µes comerciais por munic√≠pio
    *Dados baseados no ComexStat - Sistema de an√°lise das informa√ß√µes de com√©rcio exterior*
    """
)

# Se√ß√£o de Downloads logo ap√≥s o subt√≠tulo
st.markdown("### Downloads")

# Bot√µes de download em duas colunas
download_col1, download_col2 = st.columns(2)

# Gerar o mapa uma vez para usar nos downloads
mapa = gerar_mapa(ano_inicio, ano_fim)

with download_col1:
    # Bot√£o para baixar HTML do mapa - download direto
    html_string = mapa._repr_html_()
    st.download_button(
        label="üó∫Ô∏è Baixar Mapa (HTML)",
        data=html_string,
        file_name=f"mapa_alagoas_{ano_inicio}_{ano_fim}.html",
        mime="text/html",
        use_container_width=True
    )

with download_col2:
    # Preparar dados para download
    try:
        df_dados = consulta_comex(ano_inicio, ano_fim)
        
        if not df_dados.empty:
            # Adicionar informa√ß√µes de per√≠odo aos dados
            df_dados['periodo_inicio'] = ano_inicio
            df_dados['periodo_fim'] = ano_fim
            df_dados['data_consulta'] = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            
            # Reordenar colunas para melhor apresenta√ß√£o
            colunas_ordenadas = [
                'noMunMinsgUf', 
                'total_exportado', 
                'total_importado',
                'periodo_inicio',
                'periodo_fim',
                'data_consulta'
            ]
            
            # Verificar se todas as colunas existem
            colunas_existentes = [col for col in colunas_ordenadas if col in df_dados.columns]
            df_final = df_dados[colunas_existentes]
            
            # Converter para CSV
            csv_buffer = io.StringIO()
            df_final.to_csv(csv_buffer, index=False, encoding='utf-8-sig')
            csv_data = csv_buffer.getvalue()
            
            # Bot√£o para baixar dados - download direto
            st.download_button(
                label="üìä Baixar Dados (CSV)",
                data=csv_data,
                file_name=f"dados_comercio_alagoas_{ano_inicio}_{ano_fim}.csv",
                mime="text/csv",
                use_container_width=True
            )
        else:
            st.button("üìä Baixar Dados (CSV)", disabled=True, use_container_width=True)
            st.caption("‚ö†Ô∏è Nenhum dado dispon√≠vel para o per√≠odo")
            
    except Exception as e:
        st.button("üìä Baixar Dados (CSV)", disabled=True, use_container_width=True)
        st.caption(f"‚ùå Erro: {str(e)}")

# Container para o mapa com largura total
st.markdown("---")

# Usar container com largura total para o mapa
map_container = st.container()
with map_container:
    # Renderizar o mapa com largura total
    map_data = st_folium(
        mapa,
        width=None,  # Usar largura autom√°tica (vai ocupar toda a largura dispon√≠vel)
        height=700,
        key="mapa_alagoas"
    )

# Rodap√© com informa√ß√µes adicionais
st.markdown("---")
st.markdown(
    """
    <div style='text-align: center; color: #666; font-size: 0.9em;'>
        üìÖ Dados atualizados at√© 2024 | üîç Fonte: ComexStat/MDIC
    </div>
    """,
    unsafe_allow_html=True
)